---
title: "Entrega grupal"
author: "David Repullo DNI 05996834K , Mónica Hortalá DNI 02789123M , Laura Lora DNI 54195078V , Chantal Zabala DNI 7198612Q"
format:
  revealjs:
    theme: [style.scss]
    embed-resources: true
execute: 
  echo: true
---

## Paquetes necesarios

> Insertad aquí todos los paquetes vayáis necesitando

```{r}
rm(list = ls())
library(tidyverse)
library(lubridate)
library(glue)
library(ggplot2)
library(plotly)
library(forcats)
library(showtext)
library(sysfonts)
```

------------------------------------------------------------------------

### Datos

```{r}
# NO TOQUES NADA
election_data <- read_csv(file = "./data/datos_elecciones_brutos.csv")
cod_mun <- read_csv(file = "./data/cod_mun.csv")
surveys <- read_csv(file = "./data/historical_surveys.csv")
abbrev <- read_csv(file = "./data/siglas.csv")
```

------------------------------------------------------------------------

## Algunos comentarios

Además de lo que consideres oportuno realizar, los siguientes elementos son obligatorios:

-   Cada grupo debe presentar [**antes del 17 de enero (23:59)**]{.hl-red} un análisis de los datos en formato .qmd y .html, en modo Quarto slides, que serán los que presentarán el día de la exposición.

-   Las Quarto slides deben subirse a Github (un miembro de cada grupo deberá proporcionar el enlace).

-   El número máximo de diapositivas será de 45. El tiempo máximo para cada grupo será de 22 minutos (+5-10 minutos para preguntas).

------------------------------------------------------------------------

## Algunos comentarios

-   Durante la presentación, deberéis explicar (de manera resumida) el análisis realizado, asegurándoos de que cada miembro del equipo hable durante un tiempo similar y que cualquier miembro pueda responder preguntas sobre cualquiera de los pasos realizados. La nota no será la misma para todos los integrantes.

-   Se valorará no solo el contenido, sino también la presentación (estética).

-   El objetivo es demostrar que se ha adquirido el máximo conocimiento del curso

------------------------------------------------------------------------

## Ítems obligatorios

12. Deberás responder obligatoriamente a las siguientes preguntas (más aquellas que consideres analizar para distinguirte del resto)

-   ¿Qué partido fue el ganador en los municipios con más de 100.000 habitantes (censo) en cada una de las elecciones?

-   ¿Qué partido fue el segundo cuando el primero fue el PSOE? ¿Y cuando el primero fue el PP?

-   ¿A quién beneficia la baja participación?

-   ¿Cómo analizar la relación entre censo y voto? ¿Es cierto que determinados partidos ganan en las zonas rurales?

------------------------------------------------------------------------

## Ítems obligatorios

-   ¿Cómo calibrar el error de las encuestas (recordemos que las encuestas son de intención de voto a nivel nacional)?

-   ¿Qué casas encuestadoras acertaron más y cuáles se desviaron más de los resultados?

Debes incluir [**al menos 3 preguntas "originales" más**]{.hl-orange} que consideres interesantes de responder utilizando los datos.

------------------------------------------------------------------------

## Evaluación

No se valorará más a quien haga más cosas.

Más no siempre es mejor

Se valorará la originalidad (en comparación con el resto de trabajos, ya sea en lo analizado, en el tema tratado, etc.), el cariño puesto en la entrega (el cariño en la vida es importante) y la relevancia de lo realizado.

------------------------------------------------------------------------

## Evaluación

Una vez que tengas los elementos obligatorios de tu base de datos más o menos completos, piensa antes de escribir código: ¿qué podría ser interesante? ¿Qué necesito para obtener un resumen tanto numérico como visual?

Recuerda que el objetivo real es demostrar un dominio de las herramientas vistas a lo largo del curso. Y eso no se mide solo por la cantidad de herramientas utilizadas, sino también por la calidad en su ejecución.

Deberéis tenerlo todo subido a Github con el enlace generado de manera correcta.

## ENTREGA GRUPAL

------------------------------------------------------------------------

## PREPARACIÓN DATOS

```{r}
#| code-fold: true

datos <- election_data |>
  pivot_longer(cols="BERDEAK-LOS VERDES":"COALICIÓN POR MELILLA",names_to = "partidos",values_to="votos",values_drop_na=TRUE) |>  select(-tipo_eleccion, -vuelta, -codigo_distrito_electoral) 

datos<- datos |> 
  mutate(siglas = case_when( str_detect(partidos,"PARTIDO SOCIALISTA OBRERO ESPAÑOL|PARTIT DELS SOCIALISTES DE CATALUNYA|PARTIDO DOS SOCIALISTAS DE GALICIA")~"PSOE",
                            str_detect(partidos,"PARTIDO POPULAR")~"PP",
                            str_detect(partidos,"CIUDADANOS|CIUTADANS")~"CS",                                  str_detect(partidos,"PODEMOS|UNIDAS PODEMOS|UNIDOS PODEMOS|EN COMÚ PODEM|BERDEAK-LOS VERDES")~"UP",
                            str_detect(partidos,"EUZKO ALDERDI JELTZALEA-PARTIDO NACIONALISTA VASCO")~"EAJ-PNV",
                          str_detect(partidos,"BLOQUE NACIONALISTA GALEGO")~"BNG",
                          str_detect(partidos,"BLOC-INICIATIVA-VERDS-EQUO-COALICIÓ COMPROMÍS|COMPROMÍS-PODEMOS-ÉS EL MOMENT|COMPROMÍS-PODEMOS-EUPV: A LA VALENCIANA|COMPROMÍS: BLOC-INICIATIVA-VERDSEQUO|MÉS COMPROMÍS")~"COMPROMIS",
                          str_detect(partidos,"CONVERGENCIA I UNIO")~"CIU",
                          str_detect(partidos,"ESQUERRA REPUBLICANA DE CATALUNYA")~"ERC",
                          str_detect(partidos,"MÁS PAÍS")~"MP",
                          str_detect(partidos,"VOX")~"VOX",
                          str_detect(partidos,"EUSKAL HERRIA BILDU")~"EH-BILDU",
                           TRUE~"OTROS")) |>
  mutate(fecha = ymd(glue("{anno}{mes}01")), cod_mun = glue("{codigo_ccaa}-{codigo_provincia}-{codigo_municipio}")) |> 
  relocate(fecha,.after=mes) |> 
  relocate(cod_mun,.after=codigo_municipio) |>
  mutate(votos = sum(votos), .by = c(fecha, cod_mun, siglas)) |>
  distinct(fecha, cod_mun, siglas, .keep_all = TRUE)



encuestas<- surveys |> pivot_longer(cols="UCD":"EV",names_to="partidos", values_to="estimacion",values_drop_na=TRUE)|>
  drop_na(size) |> 
  filter(size>750 & exit_poll==FALSE & year(date_elec)>"2007"  & 
           (field_date_to-field_date_from)>1)

tema_favorito <-   theme_minimal() + 
  theme(plot.subtitle = element_text(face = "bold", size = 8, color = "#7C7A7A"), legend.position = "bottom")
```

------------------------------------------------------------------------

### ¿Qué partido fue el ganador en los municipios con más de 100.000 habitantes (censo) en cada una de las elecciones? P1

```{r}
#| code-fold: true

partido_ganador <- datos |>
  filter(censo>100000) |> # Filtro los municipios que importan
  group_by(fecha,cod_mun) |> #agrupo por fecha y municipio
  select(fecha,cod_mun,censo,siglas,votos) |> #seleccionamos solo lo relevante 
  slice_max(votos) |> #cogemos al ganador(el que tiene más votos)
  left_join(cod_mun,by="cod_mun") # traemos los municipios
```

------------------------------------------------------------------------

```{r}
#| code-fold: true

ggplot(partido_ganador)+
  geom_bar(aes(x=siglas,fill=siglas))+
  scale_fill_manual(values=c("EAJ-PNV"="#4B9438","PP"="#4282D3", ERC = "#EEB661", "PSOE" = "#FF1616","UP" = "#A707FD","VOX"="#44C22B", "OTROS"="#889B98"))+
  labs(x="partidos",y="victorias", title = "¿Qué partido fue el ganador en cada una de las elecciones?", subtitle = "En los municipios con más de 100.000 habitantes (censo)")+
  facet_wrap(~fecha) +
  tema_favorito +
  coord_flip()
```

------------------------------------------------------------------------

### ¿En qué sitios hay mayor participación? ¿Quién ganó en los sitios con mayor participación y donde menos? ¿A quién le beneficia la baja participación? P3

```{r}
#| code-fold: true
mayor_part <- datos |>
  group_by(cod_mun) |> 
  mutate(part_relativa = (votos_candidaturas+votos_blancos+votos_nulos)/censo) |> 
  left_join(cod_mun, by = "cod_mun") |> 
  distinct(cod_mun,.keep_all = TRUE) |> 
  ungroup()
#Primero nos creamos un gráfico que recoja la mayor participación relativa en cada municipio para cada partido. 

sitios <- mayor_part |>  
  select(cod_mun, municipio, part_relativa, siglas) |> 
  arrange(desc(part_relativa))
#Después de esta tabla nos quedamos con los municipios, las participaciones relativas y las siglas de los partidos. Para poder ver dónde hay mayor participación.

ganador_mayor <- sitios |> 
  slice_max(part_relativa, n = 100)
#Obtenemos el partido ganador en los sitios con mayor participación

ganador_menor <- sitios |> 
  slice_min(part_relativa, n = 100)
#Aquí en los sitios donde menor participación había.
  
```

------------------------------------------------------------------------

```{r}
#| code-fold: true
ggplot(ganador_mayor) + 
  geom_bar(aes(x = siglas, fill = siglas)) +
  scale_fill_manual(values = c("PP" = "#037be6", "PSOE" = "#e60603", "OTROS" = "#bdbdbd")) + 
  tema_favorito

```

------------------------------------------------------------------------

### ¿Cómo analizar la relación entre censo y voto? ¿Es cierto que determinados partidos ganan en las zonas rurales? P4

```{r}
#| code-fold: true
mascenso <- datos |> 
  filter(censo>10000) |> 
  group_by(cod_mun) |> 
  slice_max(votos)
menoscenso <- datos |>
  filter(censo<10000)|> 
  group_by(cod_mun) |> 
  slice_max(votos)
```

```{r}
#| code-fold: true
ggplot(mascenso)+
  geom_bar(aes(x=siglas,fill=siglas))+
scale_fill_manual(values=c("EAJ-PNV"="#4B9438","PP"="#037be6","CS"="#FF7518","COMPROMIS"="salmon","PSOE"="#e60603","UP"="#D882EE","CIU"="#061ab0","EH-BILDU"="#056a24","ERC"="#d9f50b","MP"="#00FFFF","VOX"="green","BNG"="#5b1906","OTROS"="#bdbdbd"))+
  tema_favorito+
  theme(axis.text.x=element_text(angle=30))+
  labs(x="Partidos" ,y="Victorias")
```

```{r}
#| code-fold: true
ggplot(menoscenso)+
  geom_bar(aes(x=siglas,fill=siglas))+
scale_fill_manual(values=c("EAJ-PNV"="#4B9438","PP"="#037be6","CS"="#FF7518","COMPROMIS"="salmon","PSOE"="#e60603","UP"="#D882EE","CIU"="#061ab0","EH-BILDU"="#056a24","ERC"="#d9f50b","MP"="#00FFFF","VOX"="green","BNG"="#5b1906","OTROS"="#bdbdbd"))+
  tema_favorito+
  labs(x="Partidos" ,y="Victorias")
```

------------------------------------------------------------------------

### ¿Cómo calibrar el error de las encuestas (recordemos que las encuestas son de intención de voto a nivel nacional)? P5

```{r}
#| code-fold: true
partidos_a_mantener <- c("PSOE", "PP", "CS", "EAJ-PNV", "BNG", "CIU", "ERC", "MP", "VOX", "EH-BILDU", "UP", "COMPROMIS")

encuestas$partidos <- ifelse(encuestas$partidos %in% partidos_a_mantener, encuestas$partidos, "OTROs")

encuestas_estimacion <- encuestas |> 
  group_by(partidos) |>        # Agrupar por partidos y fecha
  summarize(estimacion = sum(estimacion, na.rm = TRUE), .groups = "drop")
encuestas_estimacion

datos_votos <- datos |>  
  group_by(siglas, fecha) %>%           # Agrupar por partidos y fecha
  summarize(votos = sum(votos, na.rm = TRUE), .groups = "drop")
datos_votos

# Unir las tablas resumidas
datos_calibrados <- encuestas_estimacion |> 
  inner_join(datos_votos, by = c("partidos" = "siglas"), relationship = "many-to-many" )

# Error
datos_calibrados$error <- abs(datos_calibrados$estimacion - datos_calibrados$votos)
datos_calibrados


```

---

```{r}
#| code-fold: true
ggplot(datos_calibrados, aes(x = reorder(partidos, error), y = error)) +
  geom_bar(stat = "identity", fill = "#18a5da") +
  labs(title = "Error absoluto por partido", x = "Partidos", y = "Error absoluto")+
  tema_favorito +
  coord_flip() 

```

------------------------------------------------------------------------

### ¿Cuáles son los municipios con mayor porcentaje de votos nulos de España? PEXTRA1

```{r}
#| code-fold: true
porcentaje_nulos <- datos |> 
  group_by(cod_mun) |> 
  summarise(porcentaje_votos_nulos = (sum(votos_nulos) / sum(votos_candidaturas)) * 100)

ej_extra1 <-
  porcentaje_nulos |> left_join(cod_mun,by="cod_mun") |> 
  arrange(desc(porcentaje_votos_nulos)) |> head(10)  # Muestra los 10 primeros municipios

ej_extra1
```

------------------------------------------------------------------------

#Pregunta extra 2 ¿Qué partidos dominan donde los municipios tienen menos de 5 mesas electorales?
```{r}
#| code-fold: true
datos_mesas_pequenas <- datos |> 
  filter(numero_mesas < 5)

partido_ganador_mesas_pequenas <- datos_mesas_pequenas |> 
  group_by(codigo_provincia, partidos) |> 
  summarise(votos_totales = sum(votos, na.rm = TRUE)) |> 
  arrange(desc(votos_totales)) |> 
  group_by(codigo_provincia) |> 
  slice_max(order_by = votos_totales, n = 1)

partidos_dominantes_provincias <- partido_ganador_mesas_pequenas |> 
  group_by(partidos) |> 
  summarise(num_provincias_ganadas = n(), .groups = "drop") |> 
  arrange(desc(num_provincias_ganadas))
#Las 3 provincias que en las que gana el PNV son las del Pais Vasco
#Las 2 provincias que gana el PARTIT COMUNISTA DEL POBLE DE CATALUNYA son Girona y Lleida
#Las 2 provincias que gana el PARTIT DELS SOCIALISTES DE CATALUNYA son Barcelona y Tarragona
```

```{r}
#| code-fold: true
ggplot(partidos_dominantes_provincias, aes(x= reorder(partidos, -num_provincias_ganadas), y = num_provincias_ganadas, fill = partidos))+
  geom_col()+
scale_fill_manual(values=c("EUZKO ALDERDI JELTZALEA-PARTIDO NACIONALISTA VASCO"="#4B9438","PARTIDO POPULAR"="#037be6","PARTIDO SOCIALISTA OBRERO ESPAÑOL"="#e60603","PARTIT COMUNISTA DEL POBLE DE CATALUNYA"= "#f8e20b", "PARTIT DELS SOCIALISTES DE CATALUNYA"= "#16f80b"))+ 
  tema_favorito+
  theme(axis.text.x=element_text(angle=10, hjust = 1, size = 6))+
  labs(x="Partido" ,y="Numero de provincias")

```

