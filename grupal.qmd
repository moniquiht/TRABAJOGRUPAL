```{r}

```

---
title: "Entrega grupal"
author: "David Repullo DNI: 05996834-K, Mónica Hortalá DNI: 02789123-M, Laura Lora DNI: 54195078-V, Chantal Zabala DNI: 71986129-Q"
format:
  revealjs:
    theme: [style.scss]
    embed-resources: true
execute: 
  echo: true
---

## Instrucciones

-   Modificad dentro del documento .qmd vuestros datos personales (nombre y DNI) que se encuentran en el encabezado del archivo.

-   Aseguraos de que el archivo .qmd se renderice correctamente ANTES de continuar editando el documento y que el archivo .html correspondiente se genere en tu carpeta local en el ordenador.

------------------------------------------------------------------------

## Instrucciones

-   Los bloques de código (chunks) creados están vacíos o incompletos. Una vez que edites lo que consideres necesario, debes cambiar cada bloque a #\| eval: true (o eliminarlo directamente) para que se ejecuten.

-   Recuerda que puedes ejecutar los bloques de código uno por uno con el botón play o ejecutar todos los bloques hasta un bloque específico (con el botón situado a la izquierda del anterior).

------------------------------------------------------------------------

## Paquetes necesarios

> Insertad aquí todos los paquetes vayáis necesitando

```{r}
rm(list = ls())
library(tidyverse)
library(lubridate)
library(glue)
library(ggplot2)
library(plotly)
library(forcats)
library(showtext)
library(sysfonts)
```

------------------------------------------------------------------------

## Entrega grupal

### Datos

Un viejo amigo: la práctica se basará en los [**archivos de datos electorales**]{.hl-yellow} que se indican a continuación, recopilando datos sobre las elecciones al Congreso de los Diputados en España desde 2008 hasta la actualidad, así como encuestas, códigos de municipios y abreviaturas

```{r}
# NO TOQUES NADA
election_data <- read_csv(file = "./data/datos_elecciones_brutos.csv")
cod_mun <- read_csv(file = "./data/cod_mun.csv")
surveys <- read_csv(file = "./data/historical_surveys.csv")
abbrev <- read_csv(file = "./data/siglas.csv")
```

------------------------------------------------------------------------

## Datos

-   `election_data`: archivo con las elecciones al congreso
-   `cod_mun`: archivo con los códigos y nombres de cada municipio
-   `abbrev`: siglas de cada partido
-   `surveys`: encuestas electorales desde 1982.

------------------------------------------------------------------------

## Datos

-   `surveys`: encuestas electorales desde 1982.
    -   `type_survey`: tipo de encuesta (nacional, regional...)
    -   `date_elec`: fecha de las futuras elecciones
    -   `id_pollster`, `pollster`, `media`: id y nombre de la empresa encuestadora, así como medio que la encargó
    -   `field_date_from`, `field_date_to`: fechas de inicio y fin del trabajo de la encuesta
    -   `exit_poll`: ¿es una encuesta a pie de urna?
    -   `size`: tamaño muestral de la encuesta
    -   `turnout`: participación (estimación)

------------------------------------------------------------------------

## Objetivos

El objetivo de la entrega es [**realizar un análisis de los datos electorales**]{.hl-green}, llevando a cabo la depuración, los resúmenes y los gráficos que consideres necesarios, tanto de los resultados como de la precisión de las encuestas electorales.

En concreto, debes trabajar únicamente en el **período de tiempo que incluye las elecciones desde 2008 hasta las últimas elecciones de 2019**

------------------------------------------------------------------------

## Algunos comentarios

Además de lo que consideres oportuno realizar, los siguientes elementos son obligatorios:

-   Cada grupo debe presentar [**antes del 17 de enero (23:59)**]{.hl-red} un análisis de los datos en formato .qmd y .html, en modo Quarto slides, que serán los que presentarán el día de la exposición.

-   Las Quarto slides deben subirse a Github (un miembro de cada grupo deberá proporcionar el enlace).

-   El número máximo de diapositivas será de 45. El tiempo máximo para cada grupo será de 22 minutos (+5-10 minutos para preguntas).

------------------------------------------------------------------------

## Algunos comentarios

-   Durante la presentación, deberéis explicar (de manera resumida) el análisis realizado, asegurándoos de que cada miembro del equipo hable durante un tiempo similar y que cualquier miembro pueda responder preguntas sobre cualquiera de los pasos realizados. La nota no será la misma para todos los integrantes.

-   Se valorará no solo el contenido, sino también la presentación (estética).

-   El objetivo es demostrar que se ha adquirido el máximo conocimiento del curso

------------------------------------------------------------------------

## Ítems obligatorios

1.  Los datos deben ser convertidos a tidydata donde sea apropiado.

2.  Debes incluir al menos un join entre tablas.

3.  Recordatorio: información = varianza

4.  Los paquetes `{glue}`, `{forcats}` y `{lubridate}` deben ser utilizados en algún punto

5.  Los siguientes elementos deben usarse al menos una vez: mutate, summarise, group_by (o su equivalente), case_when

6.  Deberéis definir al menos una función (con más de 5 líneas de código)

------------------------------------------------------------------------

## Ítems obligatorios

7.  Contamos con muchos partidos que se presentan a las elecciones. Solo nos interesarán los siguientes partidos:

-   PARTIDO SOCIALISTA OBRERO ESPAÑOL (cuidado: tiene/tenía federaciones - sucursales - con otros nombres).
-   PARTIDO POPULAR
-   CIUDADANOS (cuidado: tiene/tenía federaciones - sucursales - con otros nombres).
-   PARTIDO NACIONALISTA VASCO
-   BLOQUE NACIONALISTA GALLEGO
-   CONVERGÈNCIA I UNIÓ

------------------------------------------------------------------------

## Ítems obligatorios

7.  Contamos con muchos partidos que se presentan a las elecciones. Solo nos interesarán los siguientes partidos:

-   UNIDAS PODEMOS - IU (atención: aquí han tenido varios nombres - IU, Podem, Ezker Batua, ... - y no siempre se han presentado juntos, pero aquí los analizaremos como un conjunto).
-   ESQUERRA REPUBLICANA DE CATALUNYA
-   EH - BILDU (ahora son una coalición de partidos formada por Sortu, Eusko Alkartasuna, Aralar, Alternatiba).
-   MÁS PAÍS
-   VOX

------------------------------------------------------------------------

## Ítems obligatorios

8.  Todo lo que no esté en alguno de los anteriores partidos debe ser correctamente reagrupado (y resumido) en `OTROS`

9.  Las siglas deben ser usadas en las visualizaciones (ideas en <https://r-graph-gallery.com/>).

10. Debes usar todos los archivos en algún momento.

11. Debes descartar las encuestas que:

```         
-   se refieran a elecciones anteriores a 2008
-   sean a pie de urna
-   tamaño muestral desconocido o inferior a 500.
-   tenga 1 día o menos de trabajo de campo.
```

------------------------------------------------------------------------

## Ítems obligatorios

12. Deberás responder obligatoriamente a las siguientes preguntas (más aquellas que consideres analizar para distinguirte del resto)

-   ¿Qué partido fue el ganador en los municipios con más de 100.000 habitantes (censo) en cada una de las elecciones?

-   ¿Qué partido fue el segundo cuando el primero fue el PSOE? ¿Y cuando el primero fue el PP?

-   ¿A quién beneficia la baja participación?

-   ¿Cómo analizar la relación entre censo y voto? ¿Es cierto que determinados partidos ganan en las zonas rurales?

------------------------------------------------------------------------

## Ítems obligatorios

-   ¿Cómo calibrar el error de las encuestas (recordemos que las encuestas son de intención de voto a nivel nacional)?

-   ¿Qué casas encuestadoras acertaron más y cuáles se desviaron más de los resultados?

Debes incluir [**al menos 3 preguntas "originales" más**]{.hl-orange} que consideres interesantes de responder utilizando los datos.

------------------------------------------------------------------------

## Evaluación

No se valorará más a quien haga más cosas.

Más no siempre es mejor

Se valorará la originalidad (en comparación con el resto de trabajos, ya sea en lo analizado, en el tema tratado, etc.), el cariño puesto en la entrega (el cariño en la vida es importante) y la relevancia de lo realizado.

------------------------------------------------------------------------

## Evaluación

Una vez que tengas los elementos obligatorios de tu base de datos más o menos completos, piensa antes de escribir código: ¿qué podría ser interesante? ¿Qué necesito para obtener un resumen tanto numérico como visual?

Recuerda que el objetivo real es demostrar un dominio de las herramientas vistas a lo largo del curso. Y eso no se mide solo por la cantidad de herramientas utilizadas, sino también por la calidad en su ejecución.

Deberéis tenerlo todo subido a Github con el enlace generado de manera correcta.

## ENTREGA GRUPAL

------------------------------------------------------------------------

## PREPARACIÓN DATOS

```{r}
#| code-fold: true
<<<<<<< Updated upstream

datos <- election_data |>
  pivot_longer(cols="BERDEAK-LOS VERDES":"COALICIÓN POR MELILLA",names_to = "partidos",values_to="votos",values_drop_na=TRUE) |>  select(-tipo_eleccion, -vuelta, -codigo_distrito_electoral) 

datos<- datos |> 
  mutate(siglas = case_when( str_detect(partidos,"PARTIDO SOCIALISTA OBRERO ESPAÑOL|PARTIT DELS SOCIALISTES DE CATALUNYA|PARTIDO DOS SOCIALISTAS DE GALICIA")~"PSOE",
                            str_detect(partidos,"PARTIDO POPULAR")~"PP",
                            str_detect(partidos,"CIUDADANOS|CIUTADANS")~"CS",                                  str_detect(partidos,"PODEMOS|UNIDAS PODEMOS|UNIDOS PODEMOS|EN COMÚ PODEM|BERDEAK-LOS VERDES")~"UP",
                            str_detect(partidos,"EUZKO ALDERDI JELTZALEA-PARTIDO NACIONALISTA VASCO")~"EAJ-PNV",
                          str_detect(partidos,"BLOQUE NACIONALISTA GALEGO")~"BNG",
                          str_detect(partidos,"BLOC-INICIATIVA-VERDS-EQUO-COALICIÓ COMPROMÍS|COMPROMÍS-PODEMOS-ÉS EL MOMENT|COMPROMÍS-PODEMOS-EUPV: A LA VALENCIANA|COMPROMÍS: BLOC-INICIATIVA-VERDSEQUO|MÉS COMPROMÍS")~"COMPROMIS",
                          str_detect(partidos,"CONVERGENCIA I UNIO")~"CIU",
                          str_detect(partidos,"ESQUERRA REPUBLICANA DE CATALUNYA")~"ERC",
                          str_detect(partidos,"MÁS PAÍS")~"MP",
                          str_detect(partidos,"VOX")~"VOX",
                          str_detect(partidos,"EUSKAL HERRIA BILDU")~"EH-BILDU",
                           TRUE~"OTROS")) |>
  mutate(fecha = ymd(glue("{anno}{mes}01")), cod_mun = glue("{codigo_ccaa}-{codigo_provincia}-{codigo_municipio}")) |> 
  relocate(fecha,.after=mes) |> 
  relocate(cod_mun,.after=codigo_municipio) |>
  mutate(votos = sum(votos), .by = c(fecha, cod_mun, siglas)) |>
  distinct(fecha, cod_mun, siglas, .keep_all = TRUE)
=======
>>>>>>> Stashed changes

datos <- election_data |>
  pivot_longer(cols="BERDEAK-LOS VERDES":"COALICIÓN POR MELILLA",names_to = "partidos",values_to="votos",values_drop_na=TRUE) |>  select(-tipo_eleccion, -vuelta, -codigo_distrito_electoral) 

datos<- datos |> 
  mutate(siglas = case_when( str_detect(partidos,"PARTIDO SOCIALISTA OBRERO ESPAÑOL|PARTIT DELS SOCIALISTES DE CATALUNYA|PARTIDO DOS SOCIALISTAS DE GALICIA")~"PSOE",
                            str_detect(partidos,"PARTIDO POPULAR")~"PP",
                            str_detect(partidos,"CIUDADANOS|CIUTADANS")~"CS",                                  str_detect(partidos,"PODEMOS|UNIDAS PODEMOS|UNIDOS PODEMOS|EN COMÚ PODEM|BERDEAK-LOS VERDES")~"UP",
                            str_detect(partidos,"EUZKO ALDERDI JELTZALEA-PARTIDO NACIONALISTA VASCO")~"EAJ-PNV",
                          str_detect(partidos,"BLOQUE NACIONALISTA GALEGO")~"BNG",
                          str_detect(partidos,"BLOC-INICIATIVA-VERDS-EQUO-COALICIÓ COMPROMÍS|COMPROMÍS-PODEMOS-ÉS EL MOMENT|COMPROMÍS-PODEMOS-EUPV: A LA VALENCIANA|COMPROMÍS: BLOC-INICIATIVA-VERDSEQUO|MÉS COMPROMÍS")~"COMPROMIS",
                          str_detect(partidos,"CONVERGENCIA I UNIO")~"CIU",
                          str_detect(partidos,"ESQUERRA REPUBLICANA DE CATALUNYA")~"ERC",
                          str_detect(partidos,"MÁS PAÍS")~"MP",
                          str_detect(partidos,"VOX")~"VOX",
                          str_detect(partidos,"EUSKAL HERRIA BILDU")~"EH-BILDU",
                           TRUE~"OTROS")) |>
  mutate(fecha = ymd(glue("{anno}{mes}01")), cod_mun = glue("{codigo_ccaa}-{codigo_provincia}-{codigo_municipio}")) |> 
  relocate(fecha,.after=mes) |> 
  relocate(cod_mun,.after=codigo_municipio) |>
  mutate(votos = sum(votos), .by = c(fecha, cod_mun, siglas)) |>
  distinct(fecha, cod_mun, siglas, .keep_all = TRUE)


encuestas<- surveys |> pivot_longer(cols="UCD":"EV",names_to="partidos", values_to="estimacion",values_drop_na=TRUE) |> drop_na(size) |> 
  filter(size>750 & exit_poll==FALSE & year(date_elec)>"2007"  & 
           (field_date_to-field_date_from)>1)

tema_favorito <-   theme_minimal() + 
  theme(plot.subtitle = element_text(face = "bold", size = 8, color = "#7C7A7A"), legend.position = "bottom")
```

------------------------------------------------------------------------

### ¿Qué partido fue el ganador en los municipios con más de 100.000 habitantes (censo) en cada una de las elecciones?

```{r}
#| code-fold: true

partido_ganador <- datos|>
  filter(censo>100000) |> # Filtro los municipios que importan
  group_by(fecha,cod_mun) |> #agrupo por fecha y municipio
  select(fecha,cod_mun,censo,siglas,votos) |> #seleccionamos solo lo relevante 
  slice_max(votos) |> #cogemos al ganador(el que tiene más votos)
  left_join(cod_mun,by="cod_mun") # traemos los municipios

partido_ganador




encuestas<- surveys |> pivot_longer(cols="UCD":"EV",names_to="partidos", values_to="estimacion",values_drop_na=TRUE) |> drop_na(size) |> 
  filter(size>750 & exit_poll==FALSE & year(date_elec)>"2007"  & 
           (field_date_to-field_date_from)>1)
tema_favorito <-   theme_minimal() + 
  theme(plot.title = element_text(face = "bold", size = 25, color = "#83D2F2"), 
        panel.background = element_rect(fill = "#E891D0"), 
        legend.position = "bottom")
```

------------------------------------------------------------------------

### ¿Cómo se reparte el voto de partidos de ámbito nacional frente a los partidos de corte autonómico o nacionalista?

```{r}
partidos_nacionales <- c("PP", "PSOE", "VOX", "UP", "MP", "UNIDAS PODEMOS"," CS")  #determinamos los paises nacionale

#sumamos todos los votos que han conseguido cada partido
suma <-
  datos |> 
  group_by(siglas) |> 
  summarise(total_votos = sum(votos))   
suma
# Creamos 'grupo' para distinguir entre nacional y autonómico
nacional_autonomo <- 
  suma |> 
  mutate(grupo = ifelse(siglas %in% partidos_nacionales, "Nacional", "Autonomico"))
nacional_autonomo
# Sumamos los votos por grupo
suma_grupo <- nacional_autonomo |> 
  group_by(grupo) |> 
  summarise(total_votos = sum(total_votos))
suma_grupo
# Calcula el porcentaje del total
porcentaje_grupo <- 
  suma_grupo |> 
  mutate(porcentaje = total_votos / sum(total_votos) * 100)
porcentaje_grupo
```

------------------------------------------------------------------------

```{r}
#| code-fold: true

ggplot(partido_ganador)+
  geom_bar(aes(x=siglas,fill=siglas))+
  scale_fill_manual(values=c("EAJ-PNV"="#4B9438","PP"="#4282D3", ERC = "#EEB661", "PSOE" = "#FF1616","UP" = "#A707FD","VOX"="#44C22B", "OTROS"="#889B98"))+
  labs(x="partidos",y="victorias", title = "¿Qué partido fue el ganador en cada una de las elecciones?", subtitle = "En los municipios con más de 100.000 habitantes (censo)")+
  facet_wrap(~fecha) +
  tema_favorito +
  coord_flip()
```

------------------------------------------------------------------------

```{r}
#PREGUNTA 2
```
